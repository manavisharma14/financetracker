// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String?         
  email          String?        @unique
  image          String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  emailVerified  DateTime?
  sessions       Session[]
  accounts       Account[]

  transactions   Transaction[]
}

model Account {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  userId              String
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  @@unique([provider, providerAccountId])


}

model Session {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken    String      @unique
  userId          String
  expires         DateTime
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Transaction { 
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  amount          Float
  type            TransactionType
  description     String? 
  createdAt       DateTime     @default(now())

  userId          String
  user            User         @relation(fields: [userId], references: [id])
}

enum TransactionType{
  INCOME
  EXPENSE
}